searchState.loadedDescShard("staticweaver", 0, "Implements caching mechanisms for improved performance.\nContains the <code>Context</code> struct for managing template …\nProvides the <code>Engine</code> struct for template rendering.\nDefines error types for template processing. Error types …\nPrelude module for convenient imports\nA simple cache implementation with expiration and optional …\nClears all items from the cache.\nChecks if a key exists in the cache and hasn’t expired.\nReturns the argument unchanged.\nRetrieves a value from the cache if it exists and hasn’t …\nInserts a key-value pair into the cache.\nCalls <code>U::from(self)</code>.\nChecks if the cache is empty.\nReturns an iterator over the key-value pairs in the cache.\nReturns the number of items in the cache.\nCreates a new Cache with the specified time-to-live (TTL) …\nRefreshes the expiration time for an item.\nRemoves a key-value pair from the cache.\nRemoves expired items from the cache.\nSets a maximum capacity for the cache. If the cache is …\nGets the remaining time-to-live for an item.\nUpdates the value for an existing key in the cache.\nCreates a new Cache with the specified TTL and initial …\nRepresents the context for template rendering.\nReturns the number of elements the context can hold …\nRemoves all key-value pairs from the context.\nExtends the context with the contents of the specified …\nReturns the argument unchanged.\nCreates a <code>Context</code> from an iterator of key-value pairs.\nRetrieves the value associated with a key from the context.\nRetrieves a mutable reference to the value associated with …\nComputes a hash of the context.\nCalls <code>U::from(self)</code>.\nReturns true if the context contains no elements.\nReturns an iterator over the context’s key-value pairs.\nReturns the number of elements in the context.\nCreates a new, empty <code>Context</code>.\nRemoves a key-value pair from the context.\nSets a key-value pair in the context.\nUpdates an existing key with a new value or inserts it if …\nCreates a new <code>Context</code> with the specified capacity.\nThe main template rendering engine.\nError types specific to the engine operations.\nInvalid template syntax errors.\nI/O related errors.\nOptions for rendering a page template.\nTemplate rendering errors.\nNetwork request related errors.\nClears all cached rendered templates.\nClosing delimiter for template tags.\nCreates or uses an existing template folder.\nElements of the page\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieves a page option from the <code>elements</code> map.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>PageOptions</code> instance.\nCreates a new <code>Engine</code> instance.\nOpening delimiter for template tags.\nCache for rendered templates.\nRenders a page using the specified layout and context, …\nRenders a template string with the given context and …\nSets a page option in the <code>elements</code> map.\nSets custom delimiters for the template tags.\nSets a maximum size for the render cache and clears the …\nPath to the template directory.\nRepresents high-level errors that can occur during the …\nEncountered an engine error during the template processing.\nContains the error value\nError when an invalid operation is attempted on a template.\nError triggered by invalid template syntax.\nError triggered by invalid template syntax.\nI/O error encountered during engine operations.\nI/O error encountered during template operations.\nError when a required variable is missing from the context.\nContains the success value\nError occurring during the rendering process.\nError during rendering, such as unresolved template tags …\nNetwork request error encountered during engine operations.\nNetwork request error encountered during template …\nError when a required resource is not found.\nA specialized <code>Result</code> type for StaticWeaver operations.\nTemplate-specific error, such as invalid syntax or …\nRepresents errors specific to template processing.\nError when an operation times out.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")